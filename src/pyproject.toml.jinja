[#- renovate: datasource=pypi depName=singer-sdk #]
[%- set SINGER_SDK_VERSION = "0.49.1" -%]
[%- set prefix = tap_id|replace('-', '_')|upper -%]

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "[[ tap_package_distribution_name ]]"
description = "Singer tap for [[ tap_source_name ]], built with the Meltano SDK for Singer Taps."
readme = "README.md"
keywords = [
  "ELT",
  "[[ tap_source_name ]]",
  "singer.io",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
maintainers = [
  { name = "[[ author_fullname ]]", email = "[[ author_email ]]" },
]
authors = [
  { name = "[[ author_fullname ]]", email = "[[ author_email ]]" },
]
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = [
  "version",
]
dependencies = [
  [%- if tap_stream_type == 'REST' and tap_auth_method == 'Basic Auth' %]
  "requests>=2,<3",
  [%- endif %]
  [%- if tap_auth_method == 'JWT' %]
  "singer-sdk[jwt]~=[[ SINGER_SDK_VERSION ]]",
  [%- else %]
  "singer-sdk~=[[ SINGER_SDK_VERSION ]]",
  [%- endif %]
  "typing-extensions>=4.15; python_full_version<'3.12'",
]
urls.Documentation = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]#readme"
urls.Homepage = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]"
urls.Repository = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]"
scripts."[[ tap_package_command_line_name ]]" = "[[ tap_package_import_name ]].tap:Tap[[ tap_source_id ]].cli"

[dependency-groups]
dev = [
  { include-group = "testing" },
  { include-group = "typing" },
]
testing = [
  "deptry>=0.12",
  "pytest>=8",
  "singer-sdk[testing]",
]
typing = [
  "mypy>=1.18",
  "ty>=0.0.1a21",
  [%- if tap_stream_type == 'GraphQL' or tap_auth_method == 'Basic Auth' %]
  "types-requests",
  [%- endif %]
  { include-group = "testing" },
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 88
lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
  "PD",     # pandas-vet
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "[[ tap_package_import_name ]]",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.deptry.package_module_name_map]
mypy = "mypy"
ty = "ty"
types-requests = "requests"

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = "-vvv --durations=10"

[tool.tox]
min_version = "4.22"
requires = [
  "tox>=4.22",
  "tox-uv",
]
env_list = [
  "dependencies",
  "typing",
  "py314",
  "py313",
  "py312",
  "py311",
  "py310",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
pass_env = [
  [%- if repository_provider == "github.com" %]
  "GITHUB_*",
  [%- endif %]
  "[[ prefix ]]_*",
]
dependency_groups = [ "testing" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.dependencies]
dependency_groups = [ "testing" ]
commands = [
  [ "deptry", { replace = "posargs", default = [ "." ], extend = true } ],
]

[tool.tox.env.typing]
dependency_groups = [ "typing" ]
commands = [
  [ "mypy", { replace = "posargs", default = [ "[[ tap_package_import_name ]]", "tests" ], extend = true } ],
  [ "ty", "check", { replace = "posargs", default = [ "[[ tap_package_import_name ]]", "tests" ], extend = true } ],
]

[tool.mypy]
warn_redundant_casts = true
warn_return_any = true
warn_no_return = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.uv]
required-version = ">=0.8"
